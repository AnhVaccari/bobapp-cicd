name: Build and Analyze SonarCloud

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Build and Analyze Backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('back/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build backend & run tests
        run: |
          cd back
          mvn clean verify

      - name: SonarCloud scan backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd back
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=AnhVaccari_bobapp-cicd \
            -Dsonar.organization=anhvaccari \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

  frontend:
    name: Build and Analyze Frontend
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd front
          npm ci

      - name: Run frontend tests with coverage
        run: |
          cd front
          npm run test -- --code-coverage --watch=false --browsers=ChromeHeadless

      - name: Install SonarScanner
        run: npm install -g sonar-scanner

      - name: SonarCloud scan frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd front
          sonar-scanner -Dsonar.login=$SONAR_TOKEN
